
Процедура ОбработкаПроведения(Отказ, Режим)
    // регистр РегистрНачисленияЗарплаты
    Движения.РегистрНачисленияЗарплаты.Записывать = Истина;
    Движение = Движения.РегистрНачисленияЗарплаты.Добавить();
    Движение.Сторно = Ложь;
    Движение.ВидРасчета = ПланыВидовРасчета.Начисления.ОкладПоТарифу;
    Движение.ПериодДействияНачало = НачалоМесяца(Дата);
    Движение.ПериодДействияКонец = КонецМесяца(Дата);
    Движение.ПериодРегистрации = Дата;
    Движение.Сотрудник = Сотрудник;
    Движение.РасчетныеДанные = ДневнойТариф;
    
    Движения.Записать();
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   РегистрНачисленияЗарплатыДанныеГрафика.РасчетныеДанные КАК РасчетныеДанные,
        |   РегистрНачисленияЗарплатыДанныеГрафика.РабочийДеньФактическийПериодДействия КАК Факт
        |ИЗ
        |   РегистрРасчета.РегистрНачисленияЗарплаты.ДанныеГрафика(Регистратор = &Ссылка) КАК РегистрНачисленияЗарплатыДанныеГрафика";
    
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    Движения.РегистрНачисленияЗарплаты.Записывать = Истина; 
    Если  ВыборкаДетальныеЗаписи.Следующий() Тогда
        
        Движение.Результат = ВыборкаДетальныеЗаписи.РасчетныеДанные * ВыборкаДетальныеЗаписи.Факт;  
        Оклад = ВыборкаДетальныеЗаписи.РасчетныеДанные * ВыборкаДетальныеЗаписи.Факт;
    КонецЕсли;
    
    Движения.РегистрНачисленияЗарплаты.Записать();
            
        // регистр ЗадолжностьПередСторудниками Приход
        Движения.ЗадолжностьПередСторудниками.Записывать = Истина;
        Движение = Движения.ЗадолжностьПередСторудниками.Добавить();
        Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
        Движение.Период = Дата;
        Движение.Сотрудник = Сотрудник;
        Движение.Долг = Оклад;


  КонецПроцедуры
